{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Settings/Settings.tsx","App.tsx","index.tsx"],"names":["Carousel","images","position","animationDuration","frameSize","actualImageWidth","isPrevButtonActive","isNextButtonActive","hadlePrevButtonClick","hadleNextButtonClick","carouselWidth","translateCoords","className","style","maxWidth","transform","transition","map","image","flexBasis","src","alt","type","disabled","cn","onClick","Settings","itemWidth","imageCount","step","setItemWidth","setFrameSize","setStep","setAnimationDuration","htmlFor","value","min","max","onChange","event","target","id","Math","floor","length","App","defaultItemWidth","window","innerWidth","useState","setPosition","isPrevButtontnActive","setIsPrevButtontnActive","setIsNextButtonActive","LAST_POSITION","useEffect","currentPosition","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74778133.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  position: number,\n  animationDuration: number,\n  frameSize: number,\n  actualImageWidth: number,\n  isPrevButtonActive: boolean,\n  isNextButtonActive: boolean,\n  hadlePrevButtonClick: () => void\n  hadleNextButtonClick: () => void\n}\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  position,\n  animationDuration,\n  frameSize,\n  actualImageWidth,\n  isPrevButtonActive,\n  isNextButtonActive,\n  hadlePrevButtonClick,\n  hadleNextButtonClick,\n}) => {\n  const carouselWidth = frameSize * actualImageWidth;\n  const translateCoords = position * -actualImageWidth;\n\n  return (\n    <>\n      <div className=\"Carousel\">\n        <div\n          className=\"Carousel__content\"\n          style={{ maxWidth: `${carouselWidth}px` }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${translateCoords}px)`,\n              transition: `transform ${animationDuration}ms linear`,\n            }}\n          >\n            {images.map((image: string) => (\n              <li\n                key={image}\n                className=\"Carousel__item\"\n                style={{\n                  flexBasis: `${actualImageWidth}px`,\n                }}\n              >\n                <img\n                  src={image}\n                  alt={`${image}`}\n                  className=\"Carousel__image\"\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            disabled={!isPrevButtonActive}\n            className={cn('Carousel__button__prev', {\n              'is-disabled': !isPrevButtonActive,\n            })}\n            onClick={hadlePrevButtonClick}\n          >\n            Back\n          </button>\n          <button\n            type=\"button\"\n            disabled={!isNextButtonActive}\n            className={cn('Carousel__button__next', {\n              'is-disabled': !isNextButtonActive,\n            })}\n            onClick={hadleNextButtonClick}\n            data-cy=\"next\"\n          >\n            Go!\n          </button>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './Settings.scss';\n\ninterface Props {\n  itemWidth: number,\n  imageCount: number,\n  frameSize: number,\n  step: number,\n  animationDuration: number,\n  setItemWidth: (value: number) => void,\n  setFrameSize: (value: number) => void,\n  setStep: (value: number) => void,\n  setAnimationDuration: (value: number) => void;\n}\n\nconst Settings: React.FC<Props> = ({\n  itemWidth,\n  imageCount,\n  frameSize,\n  step,\n  animationDuration,\n  setItemWidth,\n  setFrameSize,\n  setStep,\n  setAnimationDuration,\n}) => (\n  <>\n    <div className=\"SlideContainer__wrapper\">\n      <div className=\"SlideContainer__width\">\n        <label\n          className=\"Settings__label\"\n          htmlFor=\"itemWidth\"\n        >\n          Image width:\n        </label>\n\n        <span className=\"Settings__currentValue\">\n          {itemWidth}\n        </span>\n\n        <input\n          className=\"Slider\"\n          type=\"range\"\n          value={itemWidth}\n          min={100}\n          max={300}\n          onChange={(event) => setItemWidth(+event.target.value)}\n          id=\"itemWidth\"\n        />\n      </div>\n\n      <div className=\"SlideContainer__count\">\n        <label\n          className=\"Settings__label\"\n          htmlFor=\"frameSize\"\n        >\n          Images count:\n        </label>\n\n        <span className=\"Settings__currentValue\">\n          {frameSize}\n        </span>\n\n        <input\n          className=\"Slider\"\n          type=\"range\"\n          min={1}\n          max={Math.floor(imageCount / 2)}\n          value={frameSize}\n          onChange={(event) => setFrameSize(+event.target.value)}\n          id=\"frameSize\"\n        />\n      </div>\n\n      <div className=\"SlideContainer__step\">\n        <label\n          className=\"Settings__label\"\n          htmlFor=\"step\"\n        >\n          Scrolling step:\n        </label>\n\n        <span className=\"Settings__currentValue\">{step}</span>\n\n        <input\n          className=\"Slider\"\n          type=\"range\"\n          value={step}\n          min={1}\n          max={imageCount}\n          onChange={(event) => setStep(+event.target.value)}\n          id=\"step\"\n        />\n      </div>\n\n      <div className=\"SlideContainer__animation\">\n        <label\n          className=\"Settings__label\"\n          htmlFor=\"animationDuration\"\n        >\n          Animation speed:\n        </label>\n\n        <span className=\"Settings__currentValue\">{animationDuration}</span>\n\n        <input\n          className=\"Slider\"\n          type=\"range\"\n          min={500}\n          max={1500}\n          value={animationDuration}\n          onChange={(event) => setAnimationDuration(+event.target.value)}\n          id=\"animationDuration\"\n        />\n      </div>\n    </div>\n\n  </>\n);\n\nexport default Settings;\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel/Carousel';\nimport Settings from './components/Settings/Settings';\n\nconst images = [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n\nconst imageCount = images.length;\n\nconst App: React.FC = () => {\n  const defaultItemWidth = window.innerWidth < 390 ? 100 : 130;\n\n  const [itemWidth, setItemWidth] = useState(defaultItemWidth);\n  const [frameSize, setFrameSize] = useState(3);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [position, setPosition] = useState(0);\n  const [isPrevButtontnActive, setIsPrevButtontnActive] = useState(false);\n  const [isNextButtonActive, setIsNextButtonActive] = useState(true);\n\n  const maxCarouselWidth = frameSize * itemWidth;\n  const actualImageWidth = maxCarouselWidth / frameSize;\n\n  const FIRST_POSITION = 0;\n  const LAST_POSITION = imageCount - frameSize;\n\n  const handlePrevButtonClick = () => {\n    setPosition(currentPosition => (position - step >= FIRST_POSITION\n      ? currentPosition - step\n      : FIRST_POSITION));\n  };\n\n  const handleNextButtonClick = () => {\n    setPosition(currentPosition => (position + step <= LAST_POSITION\n      ? currentPosition + step\n      : LAST_POSITION));\n  };\n\n  useEffect(() => {\n    setIsPrevButtontnActive(position > FIRST_POSITION);\n    setIsNextButtonActive(position < LAST_POSITION);\n  }, [position]);\n\n  return (\n    <div className=\"App\">\n      <h1\n        data-cy=\"title\"\n        className=\"App__title\"\n      >\n        Carousel with\n        {imageCount}\n        images\n      </h1>\n\n      <Settings\n        itemWidth={itemWidth}\n        setItemWidth={setItemWidth}\n        imageCount={imageCount}\n        frameSize={frameSize}\n        step={step}\n        animationDuration={animationDuration}\n        setFrameSize={setFrameSize}\n        setStep={setStep}\n        setAnimationDuration={setAnimationDuration}\n      />\n\n      <Carousel\n        images={images}\n        position={position}\n        animationDuration={animationDuration}\n        frameSize={frameSize}\n        actualImageWidth={actualImageWidth}\n        isPrevButtonActive={isPrevButtontnActive}\n        isNextButtonActive={isNextButtonActive}\n        hadlePrevButtonClick={handlePrevButtonClick}\n        hadleNextButtonClick={handleNextButtonClick}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}